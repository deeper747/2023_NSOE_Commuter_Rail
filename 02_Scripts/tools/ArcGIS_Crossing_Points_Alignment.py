# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2024-02-01 17:56:59
"""
import arcpy

def IdentifyCrossingPoints():  # Crossing Points

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    arcpy.ImportToolbox(r"c:\program files\arcgis\pro\Resources\ArcToolbox\toolboxes\Data Management Tools.tbx")
    Amtrak_Rail_Stations = "Amtrak_Rail_Stations"
    StateBoundaryPolygon = "StateBoundaryPolygon"
    Railroad_Grade_Crossings = "Railroad Grade Crossings"
    CaroPied = "CaroPied"

    # Process: Select Train stations only (Select Layer By Attribute) (management)
    Amtrak_Rail_Stations_2_, Count = arcpy.management.SelectLayerByAttribute(in_layer_or_view=Amtrak_Rail_Stations, selection_type="NEW_SELECTION", where_clause="stntype = 'TRAIN'")

    # Process: Clip Stations in NC (Pairwise Clip) (analysis)
    NC_Amtrak_Stations = "X:\\Comm_Rail\\Comm_Rail.gdb\\NC_Amtrak_Stations"
    arcpy.analysis.PairwiseClip(in_features=Amtrak_Rail_Stations_2_, clip_features=StateBoundaryPolygon, out_feature_class=NC_Amtrak_Stations)

    # Process: Clip crossings in NC (Pairwise Clip) (analysis)
    NC_Railrod_Crossings = "X:\\Comm_Rail\\Comm_Rail.gdb\\NC_Railrod_Crossings"
    arcpy.analysis.PairwiseClip(in_features=Railroad_Grade_Crossings, clip_features=StateBoundaryPolygon, out_feature_class=NC_Railrod_Crossings)

    # Process: Pairwise Dissolve (2) (Pairwise Dissolve) (analysis)
    H_Line = "X:\\Comm_Rail\\Comm_Rail.gdb\\H_Line"
    arcpy.analysis.PairwiseDissolve(in_features=CaroPied, out_feature_class=H_Line, multi_part="MULTI_PART")

    # Process: Buffer the Routes (Pairwise Buffer) (analysis)
    H_Line_buffer = "X:\\Comm_Rail\\Comm_Rail.gdb\\H_Line_buffer"
    arcpy.analysis.PairwiseBuffer(in_features=H_Line, out_feature_class=H_Line_buffer, buffer_distance_or_field="15 Meters", dissolve_option="NONE", method="PLANAR", max_deviation="0 Meters")

    # Process: Clip crossings along the railway (Pairwise Clip) (analysis)
    H_Line_Crossing = "X:\\Comm_Rail\\Comm_Rail.gdb\\H_Line_Crossing"
    arcpy.analysis.PairwiseClip(in_features=NC_Railrod_Crossings, clip_features=H_Line_buffer, out_feature_class=H_Line_Crossing)

    # Process: Near (Near) (analysis)
    H_Line_Crossing_2_ = arcpy.analysis.Near(in_features=H_Line_Crossing, near_features=[H_Line], search_radius="15 Meters", location="LOCATION", angle="NO_ANGLE", method="PLANAR", field_names=[["NEAR_FID", "NEAR_FID"], ["NEAR_DIST", "NEAR_DIST"], ["NEAR_X", "NEAR_X"], ["NEAR_Y", "NEAR_Y"]])[0]

    # Process: XY Table To Point (XY Table To Point) (management)
    H_Line_Exact_Crossing = "X:\\Comm_Rail\\Comm_Rail.gdb\\H_Line_Exact_Crossing"
    arcpy.management.XYTableToPoint(in_table=H_Line_Crossing_2_, out_feature_class=H_Line_Exact_Crossing, x_field="NEAR_X", y_field="NEAR_Y", coordinate_system="GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]];-400 -400 1000000000;-100000 10000;-100000 10000;8.98315284119521E-09;0.001;0.001;IsHighPrecision")

if __name__ == '__main__':
    # Global Environment settings
    with arcpy.EnvManager(scratchWorkspace="X:\\Comm_Rail\\Comm_Rail.gdb", workspace="X:\\Comm_Rail\\Comm_Rail.gdb"):
        IdentifyCrossingPoints()
