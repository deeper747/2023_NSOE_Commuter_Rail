# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2024-02-01 17:57:07
"""
import arcpy

def ExtractElevation():  # Extract the Elevation of Vertices

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    # Check out any necessary licenses.
    arcpy.CheckOutExtension("spatial")

    arcpy.ImportToolbox(r"c:\program files\arcgis\pro\Resources\ArcToolbox\toolboxes\Data Management Tools.tbx")
    arcpy.ImportToolbox(r"c:\program files\arcgis\pro\Resources\ArcToolbox\toolboxes\Conversion Tools.tbx")
    H_Line = "H_Line"
    ImageServer = "https://services.nconemap.gov/secure/rest/services/Elevation/DEM20ft_DEM/ImageServer"

    # Process: Generate Points Along Lines (Generate Points Along Lines) (management)
    H_Line_Milepost = "X:\\Comm_Rail\\Comm_Rail.gdb\\H_Line_Milepost"
    arcpy.management.GeneratePointsAlongLines(Input_Features=H_Line, Output_Feature_Class=H_Line_Milepost, Point_Placement="DISTANCE", Distance="0.1 Miles", Include_End_Points="NO_END_POINTS", Add_Chainage_Fields="ADD_CHAINAGE")

    # Process: Make Image Server Layer (Make Image Server Layer) (management)
    NC_DEM_1 = "NC_DEM_1"
    arcpy.management.MakeImageServerLayer(in_image_service=ImageServer, out_imageserver_layer=NC_DEM_1, template="1961082.13229627 764377.576286923 2088069.05425504 847111.479987334 PROJCS[\"NAD_1983_StatePlane_North_Carolina_FIPS_3200_Feet\",GEOGCS[\"GCS_North_American_1983\",DATUM[\"D_North_American_1983\",SPHEROID[\"GRS_1980\",6378137.0,298.257222101]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Lambert_Conformal_Conic\"],PARAMETER[\"False_Easting\",2000000.002616666],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-79.0],PARAMETER[\"Standard_Parallel_1\",34.33333333333334],PARAMETER[\"Standard_Parallel_2\",36.16666666666666],PARAMETER[\"Latitude_Of_Origin\",33.75],UNIT[\"Foot_US\",0.3048006096012192]]", mosaic_method="NorthWest", order_base_value="0", cell_size=50, processing_template="None")

    # Process: Extract Values to Points (Extract Values to Points) (sa)
    milepost_elevation = "X:\\Comm_Rail\\Comm_Rail.gdb\\milepost_elevation"
    arcpy.sa.ExtractValuesToPoints(H_Line_Milepost, NC_DEM_1, milepost_elevation, "INTERPOLATE", "VALUE_ONLY")

    # Process: Export Features (Export Features) (conversion)
    HLine_milepost_elev = "X:\\Comm_Rail\\Comm_Rail.gdb\\HLine_milepost_elev"
    arcpy.conversion.ExportFeatures(in_features=milepost_elevation, out_features=HLine_milepost_elev, use_field_alias_as_name="NOT_USE_ALIAS", field_mapping="ORIG_FID \"ORIG_FID\" true true false 4 Long 0 0,First,#,X:\\Comm_Rail\\Comm_Rail.gdb\\milepost_elevation,ORIG_FID,-1,-1;ORIG_LEN \"ORIG_LEN\" true true false 8 Double 0 0,First,#,X:\\Comm_Rail\\Comm_Rail.gdb\\milepost_elevation,ORIG_LEN,-1,-1;ORIG_SEQ \"ORIG_SEQ\" true true false 4 Long 0 0,First,#,X:\\Comm_Rail\\Comm_Rail.gdb\\milepost_elevation,ORIG_SEQ,-1,-1;Shape_Length \"Shape_Length\" false true false 8 Double 0 0,First,#,X:\\Comm_Rail\\Comm_Rail.gdb\\milepost_elevation,Shape_Length,-1,-1;RASTERVALU \"RASTERVALU\" true true false 0 Float 0 0,First,#,X:\\Comm_Rail\\Comm_Rail.gdb\\milepost_elevation,RASTERVALU,-1,-1")

    # Process: Calculate Geometry Attributes (2) (Calculate Geometry Attributes) (management)
    HLine_milepost_elev_2_ = arcpy.management.CalculateGeometryAttributes(in_features=HLine_milepost_elev, geometry_property=[["x_coordinate", "POINT_X"], ["y_coordinate", "POINT_Y"]], coordinate_format="DD")[0]

    # Process: Table To Excel (Table To Excel) (conversion)
    HLine_elevation_xlsx = "X:\\Comm_Rail\\doc\\HLine_elevation.xlsx"
    arcpy.conversion.TableToExcel(Input_Table=[HLine_milepost_elev_2_], Output_Excel_File=HLine_elevation_xlsx, Use_field_alias_as_column_header="ALIAS", Use_domain_and_subtype_description="CODE")

if __name__ == '__main__':
    # Global Environment settings
    with arcpy.EnvManager(scratchWorkspace="X:\\Comm_Rail\\Comm_Rail.gdb", workspace="X:\\Comm_Rail\\Comm_Rail.gdb"):
        ExtractElevation()
